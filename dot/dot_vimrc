""""                                                                  """" 
""""                                                                  """"
"""" """       """  """""  """""      """""       """""""""  """""""" """"
""""  """     """    """   """ ""    "" """        """  """  """      """"
""""   """   """     """   """  ""  ""  """        """""""   """      """"
""""    """""""      """   """   """"   """   """  """""""   """      """"
""""     """""      """""  """"   ""    """"  """  """   """  """"""" """"
""""                                                                  """"
""""                                                                  """"

" vim-plug section
call plug#begin('~/.vim/plugged')
""" Basic / General
Plug 'vim-airline/vim-airline'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'vim-syntastic/syntastic'
Plug 'majutsushi/tagbar'
""" Languages
Plug 'rust-lang/rust.vim'
""" themes
Plug 'morhetz/gruvbox'
call plug#end()

""" colorscheme
filetype plugin on
syntax on " active syntax coloration
colorscheme gruvbox
set background=dark

""" general settings
set autoindent " one-line indent
set encoding=utf-8
set hlsearch " Highlight search results
set nocompatible " disactive Vi compatibility
set noerrorbells " No beeps
set number " set line numbers
set ruler " display the position of the cursor
set showcmd
set smartindent " intelligent indent

""" Spaces / Tabs settings
set expandtab
set tabstop=4 " Render tabs
set softtabstop=4
set shiftwidth=4 " Indentation amount using > and <
set textwidth=80
set colorcolumn=+1 " higlight column right after max textwidth                 
set scrolloff=999 " Cursor at the middle of the screen
" 120 characters max per line for files that filetype != Python
autocmd FileType * set colorcolumn=120
" Otherwise, set to 80 characters
autocmd FileType python set colorcolumn=80

""" keyboard shortcuts
nnoremap <C-j> :bprev<CR>
nnoremap <C-k> :bnext<CR>
nnoremap <C-Left> :bprev<CR>
nnoremap <C-Right> :bnext<CR>
nmap <F8> :TagbarToggle<CR>

""" syntastic settings
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

""" LANGUAGES

""" rust settings
let g:rustfmt_autosave = 1
